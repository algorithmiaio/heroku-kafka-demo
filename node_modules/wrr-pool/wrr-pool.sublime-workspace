{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"conn",
				"connectionString"
			],
			[
				"RIAK_PRO",
				"RIAK_PROTO_FILES"
			],
			[
				"defin",
				"definitions"
			],
			[
				"Re",
				"RequiredNoDefaultsProtocol"
			],
			[
				"Defa",
				"DefaultsRequiredProtocol"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"con",
				"constructor"
			],
			[
				"cre",
				"createProtocol"
			],
			[
				"Proto",
				"ProtobufProtocol"
			],
			[
				"defa",
				"defaultFieldValue"
			],
			[
				"_em",
				"_embedded"
			],
			[
				"nam",
				"namespace"
			],
			[
				"field",
				"fieldByTag"
			],
			[
				"protoc",
				"protocol"
			],
			[
				"T",
				"TRUNCATED"
			],
			[
				"I",
				"Infinity"
			],
			[
				"part",
				"partitionHash"
			],
			[
				"par",
				"partitionHash"
			],
			[
				"kaf",
				"kafkaClient"
			],
			[
				"upl",
				"uploadDir"
			],
			[
				"vide",
				"videoFilename"
			],
			[
				"iden",
				"identifyFn"
			],
			[
				"er",
				"errors"
			],
			[
				"loa",
				"loadBillingPlans"
			],
			[
				"request",
				"requestProcessingSettings"
			],
			[
				"reques",
				"requestProcessingSettings"
			],
			[
				"spinFil",
				"spinFilename"
			],
			[
				"mime",
				"mimetypeToFormat"
			],
			[
				"quey",
				"queryOptions"
			],
			[
				"manual",
				"manualPayments"
			],
			[
				"mark",
				"markInvoiceAsPaid"
			],
			[
				"sett",
				"settings"
			],
			[
				"que",
				"queryOptions"
			],
			[
				"sign",
				"signupErr"
			],
			[
				"calcu",
				"calculateStorageUsed"
			],
			[
				"proc",
				"processingSettings"
			],
			[
				"SIRV",
				"SIRV_ACCOUNT"
			],
			[
				"pat",
				"patternMatch"
			],
			[
				"sch",
				"schemas"
			],
			[
				"origi",
				"originalFormat"
			],
			[
				"max",
				"maxCDNZoneId"
			],
			[
				"report",
				"reportType"
			],
			[
				"sour",
				"sourceValue"
			],
			[
				"plan",
				"planId"
			],
			[
				"ena",
				"enableBillingPlanFeatures"
			],
			[
				"thum",
				"thumbImage"
			],
			[
				"thu",
				"thumbImage"
			],
			[
				"bucke",
				"bucketName"
			],
			[
				"atta",
				"attachment"
			],
			[
				"invoice",
				"invoiceId"
			],
			[
				"cal",
				"calculateStorageUsed"
			],
			[
				"A",
				"ApiNotSupportedError"
			],
			[
				"upda",
				"cachedUpdateATime"
			],
			[
				"orig",
				"originalUrl"
			],
			[
				"read",
				"readStream"
			],
			[
				"Con",
				"Contents"
			],
			[
				"accoun",
				"accountsByIdCache"
			],
			[
				"bor",
				"borderWidth"
			],
			[
				"inv",
				"invoiceId"
			],
			[
				"ApiE",
				"ApiNotFoundError"
			],
			[
				"APi",
				"ApiNotFoundError"
			],
			[
				"_new",
				"_newStorageUsed"
			],
			[
				"new",
				"newStorageUsed"
			],
			[
				"upd",
				"updateAccountStorageUsed"
			],
			[
				"last",
				"lastModified"
			],
			[
				"file_",
				"file_versionid"
			],
			[
				"brain",
				"braintreeId"
			],
			[
				"ha",
				"haproxy_agent"
			],
			[
				"rece",
				"receipts"
			],
			[
				"fail",
				"failedInvoices"
			],
			[
				"unpai",
				"unpaidInvoices"
			],
			[
				"check",
				"checkStorageAndSendEmails"
			],
			[
				"quo",
				"quotaEmails"
			],
			[
				"qu",
				"quotaEmails"
			],
			[
				"burst",
				"burstableStorage"
			],
			[
				"index",
				"indexOf"
			],
			[
				"touch",
				"touchApiId"
			],
			[
				"addi",
				"additionalUserData"
			],
			[
				"dat",
				"dateActive"
			],
			[
				"proce",
				"processedPath"
			],
			[
				"out",
				"outline"
			],
			[
				"cache",
				"cacheFilename"
			],
			[
				"pngq",
				"pngquantSpeed"
			],
			[
				"advde",
				"advdefLevel"
			],
			[
				"opti",
				"optipngLevel"
			],
			[
				"account",
				"accountId"
			],
			[
				"optimi",
				"optimizePNG"
			],
			[
				"comm",
				"command"
			],
			[
				"log",
				"console.log"
			],
			[
				"suppor",
				"supports"
			],
			[
				"pro",
				"processingSettings"
			],
			[
				"def",
				"deferred"
			],
			[
				"proces",
				"processedPath"
			],
			[
				"cip",
				"cipher"
			],
			[
				"url",
				"url64hmac"
			],
			[
				"expo",
				"exports"
			],
			[
				"soft",
				"softOutlineWatermark"
			],
			[
				"pars",
				"parseSchemaObject"
			],
			[
				"ba",
				"background"
			],
			[
				"process",
				"processingSettings"
			],
			[
				"hash",
				"hashAddress"
			],
			[
				"mu",
				"multicastPort"
			],
			[
				"mul",
				"multicastAddress"
			],
			[
				"ApiDa",
				"ApiDataValidationError"
			],
			[
				"direc",
				"directoryListTemplate"
			],
			[
				"uniq",
				"unique"
			],
			[
				"uni",
				"unique"
			],
			[
				"invo",
				"invoiceId"
			],
			[
				"bill",
				"billingInfo"
			],
			[
				"billi",
				"billingPlans"
			],
			[
				"rec",
				"recurringBillingReceipt"
			],
			[
				"acc",
				"accountId"
			],
			[
				"migra",
				"migration"
			],
			[
				"mig",
				"migration"
			],
			[
				"com",
				"compensation"
			],
			[
				"pub",
				"public_sub"
			],
			[
				"swit",
				"switch_messages"
			],
			[
				"public",
				"public_sub_endpoint"
			],
			[
				"pri",
				"private_pub_endpoint"
			],
			[
				"publ",
				"public_pub_endpoint"
			],
			[
				"sub",
				"subscriptions"
			],
			[
				"subsc",
				"subscriptions"
			],
			[
				"serv",
				"servicesAddr"
			],
			[
				"wat",
				"watchServices"
			],
			[
				"fs",
				"fs.rmdirSync(path);"
			],
			[
				"readdir",
				"readdir"
			],
			[
				"readir",
				"fs.readdirSync(path);"
			],
			[
				"set",
				"process.setuid();"
			]
		]
	},
	"buffers":
	[
		{
			"file": "lib/index.js",
			"settings":
			{
				"buffer_size": 3425,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/test.js",
			"settings":
			{
				"buffer_size": 6043,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".codeclimate.yml",
			"settings":
			{
				"buffer_size": 312,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 499,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".travis.yml",
			"settings":
			{
				"buffer_size": 263,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 2038,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 115.0,
		"last_filter": "rebase",
		"selected_items":
		[
			[
				"rebase",
				"git: rebase"
			],
			[
				"repl nod",
				"SublimeREPL: Node"
			],
			[
				"remoe",
				"Package Control: Remove Package"
			],
			[
				"comm",
				"Snippet: Comment - Full section comment"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"repl node",
				"SublimeREPL: Node"
			],
			[
				"mark",
				"Set Syntax: Markdown Extended"
			],
			[
				"commi",
				"git: amend previous commit"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"esl",
				"Eslint: fix current file"
			],
			[
				"git stat",
				"git: status"
			],
			[
				"git log",
				"git: log"
			],
			[
				"git lo",
				"git: log by author"
			],
			[
				"repl no",
				"SublimeREPL: Node"
			],
			[
				"node",
				"SublimeREPL: Node"
			],
			[
				"bra",
				"git: branch"
			],
			[
				"pull",
				"Github: Create Pull Request"
			],
			[
				"git reba",
				"git: rebase"
			],
			[
				"git bra",
				"git: branch"
			],
			[
				"git ta",
				"git: tags"
			],
			[
				"git bla",
				"git: blame current file"
			],
			[
				"git tags",
				"git: tags"
			],
			[
				"gith",
				"github: open file on remote"
			],
			[
				"github",
				"Github: Open File"
			],
			[
				"GIT BRA",
				"git: branch"
			],
			[
				"upgra",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"syntarub",
				"Set Syntax: Ruby"
			],
			[
				"reve",
				"File: Reveal"
			],
			[
				"repar",
				"DocBlockr: Reparse comment block"
			],
			[
				"am",
				"git: amend previous commit"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"upgr",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"bran",
				"git: branch"
			],
			[
				"conf",
				"Set Syntax: Generic Config"
			],
			[
				"defa",
				"Snippet: Merge options with defaults"
			],
			[
				"up",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"githma",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"javasc",
				"Set Syntax: JavaScript"
			],
			[
				"upgrade",
				"Package Control: Upgrade Package"
			],
			[
				"repo",
				"Github: Repository"
			],
			[
				"setsynmar",
				"Set Syntax: Markdown Extended"
			],
			[
				"setsyyam",
				"Set Syntax: YAML"
			],
			[
				"gitbl",
				"git: blame current file"
			],
			[
				"sftp",
				"SFTP: Browse Server…"
			],
			[
				"githu",
				"Github: Repository"
			],
			[
				"blame",
				"git: blame current file"
			],
			[
				"sft",
				"SFTP: Browse Server…"
			],
			[
				"ame",
				"git: amend previous commit"
			],
			[
				"gist",
				"Gist: Create Public Gist"
			],
			[
				"gistcr",
				"Gist: Create Public Gist"
			],
			[
				"gis",
				"Gist: Create Private Gist"
			],
			[
				"amen",
				"git: amend previous commit"
			],
			[
				"git",
				"git: status"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"repa",
				"DocBlockr: Reparse comment block"
			],
			[
				"githubre",
				"Github: Repository"
			],
			[
				"git fet",
				"git: fetch"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"git ",
				"git: log"
			],
			[
				"git sta",
				"git: status"
			],
			[
				"tags",
				"git: tags"
			],
			[
				"git blm",
				"git: blame current file"
			],
			[
				"gitlo",
				"git: log by author"
			],
			[
				"gitsa",
				"GitSavvy: help"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"js",
				"Set Syntax: JSON"
			],
			[
				"synjava",
				"Set Syntax: JavaScript"
			],
			[
				"rep",
				"SublimeREPL: Node"
			],
			[
				"re",
				"DocBlockr: Reparse comment block"
			],
			[
				"JS",
				"Set Syntax: JSON"
			],
			[
				"snipcry",
				"Snippet: crypto.createHash"
			],
			[
				"packa",
				"Preferences: Package Control Settings – Default"
			],
			[
				"git am",
				"Git: Amend Commit"
			],
			[
				"git amm",
				"Git: Amend Commit"
			],
			[
				"gene",
				"Set Syntax: Generic Config"
			],
			[
				"ali",
				"AlignTab: Table Mode"
			],
			[
				"align",
				"AlignTab: Table Mode"
			],
			[
				"ajava",
				"Set Syntax: JavaScript"
			],
			[
				"it log",
				"Git: Log"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"uo",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"CSS",
				"Set Syntax: CSS"
			],
			[
				"doc",
				"DocBlockr: Reparse comment block"
			],
			[
				"upg",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"syn java",
				"Set Syntax: JavaScript"
			],
			[
				"synta javas",
				"Set Syntax: JavaScript"
			],
			[
				"syn json",
				"Set Syntax: JSON"
			],
			[
				"ste syn yam",
				"Set Syntax: YAML"
			],
			[
				"synta json",
				"Set Syntax: JSON"
			],
			[
				"ste synt json",
				"Set Syntax: JSON"
			],
			[
				"ste syntajson",
				"Set Syntax: JSON"
			],
			[
				"syn javas",
				"Set Syntax: JavaScript"
			],
			[
				"syn jso",
				"Set Syntax: JSON"
			],
			[
				"upda",
				"Package Control: Upgrade Package"
			],
			[
				"ste syn yaml",
				"Set Syntax: YAML"
			],
			[
				"set syn ya",
				"Set Syntax: YAML"
			],
			[
				"synta java",
				"Set Syntax: JavaScript"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"sftpbr",
				"SFTP: Browse Server…"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"syn ja",
				"Set Syntax: JavaScript"
			],
			[
				"list p",
				"Package Control: List Packages"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"repl",
				"SublimeREPL: PHP"
			],
			[
				"repl ",
				"SublimeREPL: Erlang"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"dire",
				"dired"
			],
			[
				"colo",
				"Color Picker"
			],
			[
				"list pak",
				"Package Control: List Packages"
			],
			[
				"dotc",
				"Convert Case: dot.case"
			],
			[
				"das",
				"Convert Case: dash-case"
			],
			[
				"camel",
				"Convert Case: camelCase"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"alig",
				"AlignTab: Table Mode"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"spli",
				"MultiEditUtils: Split selection"
			],
			[
				"synt json",
				"Set Syntax: JSON"
			],
			[
				"synta jade",
				"Set Syntax: Jade"
			],
			[
				"repl lua",
				"SublimeREPL: Lua"
			],
			[
				"dir",
				"dired"
			],
			[
				"amed",
				"Git: Amend Commit"
			],
			[
				"syn javasc",
				"Set Syntax: JavaScript"
			],
			[
				"tog he",
				"Hex Viewer: Toggle Hex View"
			]
		],
		"width": 579.0
	},
	"console":
	{
		"height": 336.0,
		"history":
		[
			"getenv",
			"help()",
			"help",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/oleksiy/src/wrr-pool",
		"/Users/oleksiy/src/wrr-pool/lib",
		"/Users/oleksiy/src/wrr-pool/test"
	],
	"file_history":
	[
		"/Users/oleksiy/src/wrr-pool/package.json",
		"/Users/oleksiy/src/wrr-pool/test.js",
		"/Users/oleksiy/src/wrr-pool/lib/gcd.js",
		"/Users/oleksiy/src/wrr-pool/Makefile",
		"/Users/oleksiy/src/wrr-pool/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/wrr-pool/.git/MERGE_MSG",
		"/Users/oleksiy/src/wrr-pool/README.md",
		"/Users/oleksiy/src/wrr-pool/wrr-pool.sublime-project",
		"/Users/oleksiy/src/no-riak/index.js",
		"/Users/oleksiy/src/no-riak/package.json",
		"/Users/oleksiy/src/no-riak/Makefile",
		"/Users/oleksiy/src/no-riak/.travis.yml",
		"/Users/oleksiy/src/no-riak/LICENSE",
		"/Users/oleksiy/src/no-riak/no-riak.sublime-project",
		"/Users/oleksiy/src/binary-protocol/package.json",
		"/Users/oleksiy/src/binary-protocol/README.md",
		"/Users/oleksiy/src/binary-protocol/.git/COMMIT_EDITMSG",
		"/Users/oleksiy/src/binary-protocol/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/binary-protocol/test/proto/packed.proto",
		"/Users/oleksiy/src/binary-protocol/test/proto/oneof.proto",
		"/Users/oleksiy/src/binary-protocol/lib/writer.js",
		"/Users/oleksiy/src/binary-protocol/lib/reader.js",
		"/Users/oleksiy/src/binary-protocol/test/proto/repeated-message.proto",
		"/Users/oleksiy/src/binary-protocol/.git/MERGE_MSG",
		"/Users/oleksiy/src/binary-protocol/test/pb_types.js",
		"/Users/oleksiy/src/binary-protocol/test.js",
		"/Users/oleksiy/src/binary-protocol/test/protocol.js",
		"/Users/oleksiy/src/binary-protocol/test/proto/complex.proto",
		"/Users/oleksiy/src/binary-protocol/test2.js",
		"/Users/oleksiy/src/binary-protocol/test/protobuf.js",
		"/Users/oleksiy/src/binary-protocol/test/proto/basic.proto",
		"/Users/oleksiy/src/tmp/pb_test/test.js",
		"/Users/oleksiy/src/binary-protocol/test/proto/required-no-defaults.proto",
		"/Users/oleksiy/src/binary-protocol/test/proto/no-package.proto",
		"/Users/oleksiy/src/binary-protocol/test/proto/defaults-misc.proto",
		"/Users/oleksiy/src/binary-protocol/test/proto/defaults-required.proto",
		"/Users/oleksiy/src/binary-protocol/test/varint.js",
		"/Users/oleksiy/src/binary-protocol/test/writer.js",
		"/Users/oleksiy/src/binary-protocol/test/proto/defaults-optional.proto",
		"/Users/oleksiy/src/binary-protocol/test/complex.proto",
		"/Users/oleksiy/src/binary-protocol/test/basic.proto",
		"/Users/oleksiy/.bash_profile",
		"/Users/oleksiy/Library/Caches/Cleanup At Startup/Transmit/36F65F81-0D2E-4D9C-AD1E-D4F368E9F5A2/Example.profile",
		"/Users/oleksiy/src/binary-protocol/lib/protobuf/index.js",
		"/Users/oleksiy/src/tmp/pb_test/test.proto",
		"/Users/oleksiy/src/binary-protocol/lib/index.js",
		"/Users/oleksiy/src/binary-protocol/test/reader.js",
		"/Users/oleksiy/src/tmp/pb_test/test.json",
		"/Users/oleksiy/src/binary-protocol/test.proto",
		"/Users/oleksiy/src/binary-protocol/lib/protobuf/varint.js",
		"/Users/oleksiy/.zshrc",
		"/Users/oleksiy/src/binary-protocol/binary-protocol.sublime-project",
		"/Users/oleksiy/src/binary-protocol/lib/protobuf.js",
		"/Users/oleksiy/src/binary-protocol/.eslintrc",
		"/Users/oleksiy/src/binary-protocol/protobuf/index.js",
		"/Users/oleksiy/src/binary-protocol/.jshintrc",
		"/Users/oleksiy/src/binary-protocol/Makefile",
		"/Users/oleksiy/src/binary-protocol/test-v4.js",
		"/Users/oleksiy/src/kafka/.git/COMMIT_EDITMSG",
		"/Users/oleksiy/src/kafka/.git/rebase-merge/git-rebase-todo",
		"/Users/oleksiy/src/binary-protocol/test/globals.js",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/oleksiy/src/binary-protocol/.gitignore",
		"/Users/oleksiy/src/binary-protocol/.travis.yml",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/tasks/main.yml",
		"/Users/oleksiy/src/sirv/pubsub/pubsub.js",
		"/Users/oleksiy/src/sirv/ansible/roles/mac-develop/templates/service",
		"/Users/oleksiy/src/sirv/frontend-api/controllers/protected/events.js",
		"/Users/oleksiy/src/sirv/frontend-client/src/scripts/service.events.js",
		"/Users/oleksiy/src/sirv/node_modules/kafka-node/lib/producer.js",
		"/Users/oleksiy/src/sirv/ansible/roles/haproxy/templates/haproxy.cfg",
		"/Users/oleksiy/src/sirv/api/services/users.js",
		"/Users/oleksiy/src/sirv/node_modules/kafka-node/lib/client.js",
		"/Users/oleksiy/src/sirv/frontend-client/src/components/mousetrap/tests/libs/key-event.js",
		"/Users/oleksiy/src/sirv/sirv.sublime-project",
		"/Users/oleksiy/src/sirv/KAFKA-TOPIC-MANAGEMENT",
		"/Users/oleksiy/src/sirv/.gitignore",
		"/Users/oleksiy/src/sirv/files/app.js",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/templates/nginx/lua/access.lua",
		"/Users/oleksiy/src/sirv/KAFKA-CREATE-TOPIC",
		"/Users/oleksiy/src/sirv/config/sirv.js",
		"/Users/oleksiy/src/sirv/ansible/bin/hetzner",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/templates/sirv.local.js",
		"/Users/oleksiy/src/sirv/ansible/roles/zookeeper/templates/zoo.cfg",
		"/Users/oleksiy/src/sirv/ansible/roles/zookeeper/templates/myid",
		"/Users/oleksiy/src/sirv/ansible/inventory/hetzner",
		"/Users/oleksiy/src/sirv/service",
		"/Users/oleksiy/src/sirv/ftpd/nodemon.json",
		"/Users/oleksiy/src/sirv/s3/nodemon.json",
		"/Users/oleksiy/src/sirv/files/nodemon.json",
		"/Users/oleksiy/src/sirv/kafka.js",
		"/usr/local/etc/kafka/server.properties",
		"/Users/oleksiy/src/sirv/package.json",
		"/Users/oleksiy/src/sirv/ansible/production.yml",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/templates/nginx/20.s3.sirv.com.conf",
		"/Users/oleksiy/src/sirv/NEW_HETZNERS",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/templates/nginx/50.www.sirv.com.conf",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/templates/nginx/99.sirv.com.conf",
		"/Users/oleksiy/src/sirv/ansible/inventory/hetzner-c1",
		"/Users/oleksiy/src/sirv/ansible/group_vars/all",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/templates/ufw.j2",
		"/Users/oleksiy/src/sirv/api/services/images.js",
		"/Users/oleksiy/src/sirv/api/schema/account.js",
		"/Users/oleksiy/src/sirv/ansible/inventory/vagrant",
		"/Users/oleksiy/src/sirv/ansible/group_vars/ubuntu-develop",
		"/Users/oleksiy/src/sirv/Vagrantfile",
		"/Users/oleksiy/src/sirv/files/controller.js",
		"/Users/oleksiy/.ssh/id_rsa.pub",
		"/Users/oleksiy/src/sirv/ansible/roles/sirv-backend/templates/nginx/50.my.sirv.com.conf",
		"/Users/oleksiy/src/sirv/ansible/roles/ubuntu-develop/tasks/main.yml",
		"/Users/oleksiy/src/sirv/ansible/roles/mac-develop/tasks/main.yml",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/GitSavvy/GitSavvy.sublime-settings",
		"/Users/oleksiy/src/sirv/api/billing/plans/custom/JRosmarionPartner_30.js",
		"/Users/oleksiy/src/sirv/ansible/roles/gm-im/tasks/main.yml",
		"/Users/oleksiy/src/sirv/api/billing/plans/index.js",
		"/Users/oleksiy/src/sirv/ansible/roles/gm-im/tasks/ffmpeg.yml",
		"/Users/oleksiy/src/sirv/api/services/videos.js",
		"/Users/oleksiy/src/sirv/ansible/roles/openresty/tasks/main.yml",
		"/Users/oleksiy/src/sirv/api/services/files.js",
		"/Users/oleksiy/src/sirv/api/services/spins.js",
		"/Users/oleksiy/src/sirv/riakfs.js",
		"/Users/oleksiy/src/sirv/contrib/riak/replication.erl",
		"/Users/oleksiy/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/oleksiy/src/sirv/api/schema/index.js",
		"/Users/oleksiy/src/sirv/ansible/roles/java/tasks/main.yml",
		"/Users/oleksiy/src/sirv/api/schema/image/schema.js",
		"/Users/oleksiy/src/sirv/api/services/index.js",
		"/Users/oleksiy/src/sirv/pdf/invoice/index.jade"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"kafka",
			"(0)",
			"kafka",
			"array",
			"index",
			"currentValue",
			"previousValue",
			"n",
			"m",
			"kafka",
			"10000",
			"self.",
			"console",
			"connection.send",
			"=",
			"connectionString",
			"this",
			"RpbErrorResp",
			"errmsg",
			"errcode",
			"err",
			"error",
			"noresponse",
			"bytesToStringIgnorePatterns",
			"notfound_ok",
			"basic_quorum",
			"RpbGetReq",
			"string",
			"RpbGetServerInfoReq",
			"Kafka",
			"auto",
			"auto_",
			"9092",
			"NoKafkaConnectionError",
			"KafkaError",
			"message",
			"name",
			"write",
			"MESSAGES_CSV",
			"ping",
			"riak_dt",
			"oleksiyk/kafka",
			"defineMessage",
			"field",
			"key",
			"from",
			"type",
			"Vendor",
			"undefined",
			"_lengthDelimited",
			"_value",
			"fvalue",
			"this",
			"getFieldWireType",
			"basic",
			" ",
			"SuperProtocol",
			"Protocol.define",
			"));",
			"Protocol.createProtobufProtocol(fs.readFileSync(path.join(__dirname, ",
			"typeSpecificDefaults",
			"this",
			"ProtobufProtocol",
			"_proto_",
			"this",
			"to._pro",
			"_proto",
			"this",
			"ProtobufProtocol",
			"protocol",
			"parseProto",
			"name",
			"createProtocol",
			"Reader",
			"superProtocol",
			"_$P",
			"_$Writer",
			"_$Reader",
			"Reader",
			"_",
			"protocol",
			"definitions",
			"self",
			"var protocol = new Protocol({\n            protobuf: true\n        });",
			"self",
			"typeSpecificDefaults",
			"defineMessage",
			"defineEnum",
			"defaultFieldValue",
			"self",
			"definitions",
			"protocol",
			"gtest1",
			"proto",
			"pr",
			"gtest1",
			"Pro",
			"pro",
			"protocol1",
			"gtest1",
			"Reader",
			"name",
			"$P",
			"$",
			"Reader",
			"$P.$Reader",
			"_pdefine",
			"Writer",
			"Reader",
			"$P.$Reader",
			"self",
			"argument",
			"proto",
			"writerBufSize",
			"typeSpecificDefaults",
			"result",
			"var protocol = require('bin-protocol');",
			"read",
			"_field",
			"self.context[_field.name]",
			"_default !== undefined",
			"buffer",
			"name",
			"optional",
			"encoded",
			"holder",
			"myenum",
			"field"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"",
			"app.config.imageMagick.limits",
			"noup",
			"ignore",
			"sublime.active_window()"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "lib/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3425,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								3421,
								3421
							]
						],
						"settings":
						{
							"_anf_new": "",
							"git_savvy.file_path": "/Users/oleksiy/src/wrr-pool/lib/index.js",
							"git_savvy.repo_path": "/Users/oleksiy/src/wrr-pool",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "test/test.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6043,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								4971,
								4971
							]
						],
						"settings":
						{
							"_anf_new": "",
							"git_savvy.file_path": "/Users/oleksiy/src/wrr-pool/test/test.js",
							"git_savvy.repo_path": "/Users/oleksiy/src/wrr-pool",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2825.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".codeclimate.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 312,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"_anf_new": "",
							"git_savvy.file_path": "/Users/oleksiy/src/wrr-pool/.codeclimate.yml",
							"git_savvy.repo_path": "/Users/oleksiy/src/wrr-pool",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 499,
						"regions":
						{
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"git_savvy.file_path": "/Users/oleksiy/src/wrr-pool/Makefile",
							"git_savvy.repo_path": "/Users/oleksiy/src/wrr-pool",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": ".travis.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 263,
						"regions":
						{
						},
						"selection":
						[
							[
								263,
								263
							]
						],
						"settings":
						{
							"git_savvy.file_path": "/Users/oleksiy/src/wrr-pool/.travis.yml",
							"git_savvy.repo_path": "/Users/oleksiy/src/wrr-pool",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2038,
						"regions":
						{
						},
						"selection":
						[
							[
								251,
								251
							]
						],
						"settings":
						{
							"git_savvy.file_path": "/Users/oleksiy/src/wrr-pool/README.md",
							"git_savvy.repo_path": "/Users/oleksiy/src/wrr-pool",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 102.0
	},
	"output.git-checkout":
	{
		"height": 102.0
	},
	"output.git-commit":
	{
		"height": 102.0
	},
	"output.git-custom":
	{
		"height": 102.0
	},
	"output.git-push":
	{
		"height": 102.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 102.0
	},
	"output.sftp":
	{
		"height": 102.0
	},
	"output.show_commit_info":
	{
		"height": 96.0
	},
	"pinned_build_system": "",
	"project": "wrr-pool.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"COMMIT: wrr-pool"
			],
			[
				"oo",
				"lib/pool.js"
			],
			[
				"compl",
				"test/proto/complex.proto"
			],
			[
				"bas",
				"test/basic.proto"
			],
			[
				"basi",
				"test/basic.proto"
			],
			[
				"te",
				"test.js"
			],
			[
				"com",
				"test/complex.proto"
			],
			[
				"test",
				"test.js"
			],
			[
				"rea",
				"lib/reader.js"
			],
			[
				"50.ww",
				"ansible/roles/sirv-backend/templates/nginx/50.www.sirv.com.conf"
			],
			[
				"hapro",
				"ansible/roles/haproxy/templates/haproxy.cfg"
			],
			[
				"sirvtaskma",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"testeve",
				"test/api/07.events.js"
			],
			[
				"apiusers",
				"api/services/users.js"
			],
			[
				"apieven",
				"api/services/events.js"
			],
			[
				"filesapp",
				"files/app.js"
			],
			[
				"serv",
				"ansible/roles/mac-develop/templates/service"
			],
			[
				"app",
				"app.js"
			],
			[
				"sirv-bamain",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"all",
				"ansible/group_vars/all"
			],
			[
				"binhe",
				"ansible/bin/hetzner"
			],
			[
				"sirv.js",
				"config/sirv.js"
			],
			[
				"het",
				"NEW_HETZNERS"
			],
			[
				"he",
				"ansible/inventory/hetzner"
			],
			[
				"hetzn",
				"ansible/inventory/hetzner"
			],
			[
				"apiimag",
				"api/services/images.js"
			],
			[
				"new",
				"NEW_HETZNERS"
			],
			[
				"50",
				"ansible/roles/sirv-backend/templates/nginx/50.www.sirv.com.conf"
			],
			[
				"99",
				"ansible/roles/sirv-backend/templates/nginx/99.sirv.com.conf"
			],
			[
				"haproxy",
				"ansible/roles/haproxy/templates/haproxy.cfg"
			],
			[
				"nginx.c",
				"ansible/roles/openresty/templates/nginx.conf"
			],
			[
				"apiimages",
				"api/services/images.js"
			],
			[
				"filescon",
				"files/controller.js"
			],
			[
				"apiimage",
				"api/services/images.js"
			],
			[
				"scheacc",
				"api/schema/account.js"
			],
			[
				"openretyma",
				"ansible/roles/openresty/tasks/main.yml"
			],
			[
				"service",
				"ansible/roles/mac-develop/templates/service"
			],
			[
				"mactamai",
				"ansible/roles/mac-develop/tasks/main.yml"
			],
			[
				"riakfs",
				"riakfs.js"
			],
			[
				"apifiles",
				"api/services/files.js"
			],
			[
				"invoin",
				"pdf/invoice/index.jade"
			],
			[
				"filecontr",
				"files/controller.js"
			],
			[
				"filesc",
				"files/controller.js"
			],
			[
				"05.",
				"test/api/05.files.js"
			],
			[
				"buck",
				"ansible/roles/riak/templates/setup_riak_buckets.sh"
			],
			[
				"riak",
				"riak.js"
			],
			[
				"imagesche",
				"api/schema/image/schema.js"
			],
			[
				"spintile",
				"frontend-client/src/views/browse/spin.tile.jade"
			],
			[
				"schemim",
				"api/schema/image.js"
			],
			[
				"sirv",
				"sirv"
			],
			[
				"apiuser",
				"api/services/users.js"
			],
			[
				"apitokens",
				"api/services/tokens.js"
			],
			[
				"gm-im",
				"ansible/roles/gm-im/tasks/main.yml"
			],
			[
				"mac-de",
				"ansible/roles/mac-develop/tasks/main.yml"
			],
			[
				"aispin",
				"api/schema/spin.js"
			],
			[
				"apifile",
				"api/services/files.js"
			],
			[
				"yk",
				"contrib/riak/yk_files_schema.xml"
			],
			[
				"schemima",
				"api/schema/image/schema.js"
			],
			[
				"apiima",
				"api/services/images.js"
			],
			[
				"apispins",
				"api/services/spins.js"
			],
			[
				"apibill",
				"api/services/billing.js"
			],
			[
				"apiacc",
				"api/services/accounts.js"
			],
			[
				"turn",
				"api/billing/plans/custom/TurnAndShoot.js"
			],
			[
				"servimage",
				"api/services/images.js"
			],
			[
				"digima",
				"ansible/roles/sirv-backend/tasks/digimarc.yml"
			],
			[
				"ansibsirvbamain",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"serima",
				"api/services/images.js"
			],
			[
				"spins",
				"api/services/spins.js"
			],
			[
				"schemacc",
				"api/schema/account.js"
			],
			[
				"apispin",
				"api/services/spins.js"
			],
			[
				"ykac",
				"contrib/riak/yk_accounts_schema.xml"
			],
			[
				"crefiles",
				"ansible/roles/sirv-backend/templates/create-files-schema.js"
			],
			[
				"cache",
				"ansible/roles/sirv-backend/templates/nginx/lua/cache_get.lua"
			],
			[
				"filec",
				"files/controller.js"
			],
			[
				"schemimas",
				"api/schema/image/schema.js"
			],
			[
				"testapiim",
				"test/api/06.images.js"
			],
			[
				"50.",
				"ansible/roles/sirv-backend/templates/nginx/50.www.sirv.com.conf"
			],
			[
				"schcanv",
				"api/schema/image/canvas.js"
			],
			[
				"schemca",
				"api/schema/image/canvas.js"
			],
			[
				"schespin",
				"api/schema/spin.js"
			],
			[
				"testspin",
				"test/api/spins.detection.js"
			],
			[
				"pfs",
				"lib/pfs.js"
			],
			[
				"embed.",
				"contrib/digimarc/embed.cc"
			],
			[
				"commtama",
				"ansible/roles/common/tasks/main.yml"
			],
			[
				"apicdn",
				"api/services/cdn.js"
			],
			[
				"filecon",
				"files/controller.js"
			],
			[
				"testmaim",
				"test/manual/images.js"
			],
			[
				"ansirolesirv-batama",
				"ansible/roles/sirv-backend/tasks/main.yml"
			],
			[
				"apifles",
				"api/services/files.js"
			],
			[
				"spind",
				"test/api/spins.detection.js"
			],
			[
				"schemimasc",
				"api/schema/image/scale.js"
			],
			[
				"scheim",
				"api/schema/index.js"
			],
			[
				"apisign",
				"api/services/signup.js"
			],
			[
				"schemaa",
				"api/schema/account.js"
			],
			[
				"servima",
				"api/services/images.js"
			],
			[
				"confsir",
				"config/sirv.js"
			],
			[
				"creatsirv",
				"ansible/roles/sirv-backend/templates/create-sirv-account.js"
			],
			[
				"testspi",
				"test/api/spins.detection.js"
			],
			[
				"sirvlo",
				"ansible/roles/sirv-backend/templates/nginx/sirv_log.conf"
			],
			[
				"mac-devtama",
				"ansible/roles/mac-develop/tasks/main.yml"
			],
			[
				"contrdigi",
				"contrib/digimarc/.gitignore"
			],
			[
				"con.gi",
				"contrib/.gitignore"
			],
			[
				"make",
				"contrib/digimarc/Makefile"
			],
			[
				"digi",
				"ansible/roles/sirv-backend/tasks/digimarc.yml"
			],
			[
				"mac-dema",
				"ansible/roles/mac-develop/tasks/main.yml"
			],
			[
				"dum",
				"ansible/bin/dump_host_vars"
			],
			[
				"schacc",
				"api/schema/account.js"
			],
			[
				"ubuntumain",
				"ansible/roles/ubuntu-develop/tasks/main.yml"
			],
			[
				"schemaima",
				"api/schema/image/schema.js"
			],
			[
				"mactasmain",
				"ansible/roles/mac-develop/tasks/main.yml"
			],
			[
				"gene",
				"contrib/generate-googlefonts"
			],
			[
				"testmaima",
				"test/manual/images.js"
			],
			[
				"filescontr",
				"files/controller.js"
			],
			[
				"setup",
				"ansible/roles/riak/templates/setup_riak_buckets.sh"
			],
			[
				"schemus",
				"api/schema/user.js"
			],
			[
				"scheima",
				"api/schema/image/schema.js"
			],
			[
				"filesont",
				"files/controller.js"
			],
			[
				"schemspin",
				"api/schema/spin.js"
			],
			[
				"accs",
				"contrib/riak/yk_accounts_schema.xml"
			],
			[
				"acc",
				"api/schema/account.js"
			],
			[
				"ubu",
				"UBUNTU-DEVELOP-README.md"
			],
			[
				"s3con",
				"s3/controller.js"
			],
			[
				"s3app",
				"s3/app.js"
			],
			[
				"creattest",
				"ansible/roles/sirv-backend/templates/create-test-account.js"
			],
			[
				"createa",
				"ansible/roles/sirv-backend/templates/create-accounts-schema.js"
			],
			[
				"create",
				"ansible/roles/sirv-backend/templates/create-files-schema.js"
			],
			[
				"crea",
				"ansible/roles/sirv-backend/templates/create-files-schema.js"
			],
			[
				"schemuse",
				"api/schema/user.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ApiDuplicateEntryError"
			]
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 267.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
